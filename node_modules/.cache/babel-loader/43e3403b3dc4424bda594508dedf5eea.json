{"ast":null,"code":"var _jsxFileName = \"/app/app/javascript/components/EditTodo.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nvar InputName = styled.input(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  font-size: 20px;\\n  width: 100%;\\n  height: 40px;\\n  padding: 2px 7px;\\n  margin: 12px 0;\\n\"])));\nvar CurrentStatus = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-size: 19px;\\n  margin: 8px 0 12px 0;\\n  font-weight: bold;\\n\"])));\nvar IsCompletedButton = styled.button(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  color: #fff;\\n  font-size: 17px;\\n  font-weight: 500;\\n  padding: 5px 10px;\\n  background: #2a115;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointed;\\n\"])));\nvar EditButton = styled.button(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  color: #fff;\\n  font-size: 17px;\\n  font-weight: 500;\\n  padding: 5px 10px;\\n  margin: 0 10px;\\n  background: #0ac620;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointed;\\n\"])));\nvar DeleteButton = styled.button(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  color: #fff;\\n  font-size: 17px;\\n  font-weight: 500;\\n  padding: 5px 10px;\\n  background: #f54242;\\n  border: none;\\n  border-radius: 3px;\\n  cursor: pointed;\\n\"])));\ntoast.configure();\n\nfunction EditTodo(props) {\n  var initialTodoState = {\n    id: null,\n    name: \"\",\n    is_completed: false\n  };\n\n  var _useState = useState(initialTodoState),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentTodo = _useState2[0],\n      setCurrentTodo = _useState2[1];\n\n  var notify = function notify() {\n    toast.success('Todo successfully updated', {\n      position: 'bottom-center',\n      hideProgressBar: true\n    });\n  };\n\n  var getTodo = function getTodo(id) {\n    axios.get(\"/api/v1/todos/\".concat(id)).then(function (resp) {\n      setCurrentTodo(resp.data);\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  useEffect(function () {\n    getTodo(prop.match.params.id);\n  }, [props.match.params.id]);\n\n  var handleInputChange = function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setCurrentTodo(_objectSpread(_objectSpread({}, currentTodo), {}, _defineProperty({}, name, value)));\n  };\n\n  var updateIsCompleted = function updateIsCompleted(val) {\n    var data = {\n      id: val.id,\n      name: val.name,\n      is_completed: !val.is_completed\n    };\n    axios.patch(\"/api/v1/todos/\".concat(val.id), data).then(function (resp) {\n      setCurrentTodo(resp.data);\n    });\n  };\n\n  var updateTodo = function updateTodo() {\n    axios.patch(\"/api/v1/todos/\".concat(currentTodo.id), currentTodo).then(function (resp) {\n      notify();\n      props.history.push('/todos');\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n\n  var deleteTodo = function deleteTodo() {\n    var sure = window.confirm('Are you sure?');\n\n    if (sure) {\n      axios[\"delete\"](\"/api/v1/todos/\".concat(currentTodo.id)).then(function (resp) {\n        props.history.push('/todos');\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Editing Todo\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Current Name\"), /*#__PURE__*/React.createElement(InputName, {\n    type: \"text\",\n    name: \"name\",\n    value: currentTodo.name,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Current Status\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(CurrentStatus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, currentTodo.is_completed ? \"Completed\" : \"Uncompleted\"))), currentTodo.is_completed ? /*#__PURE__*/React.createElement(IsCompletedButton, {\n    onClick: function onClick() {\n      return updateIsCompleted(currentTodo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Uncompleted\") : /*#__PURE__*/React.createElement(IsCompletedButton, {\n    onClick: function onClick() {\n      return updateIsCompleted(currentTodo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"Completed\"), /*#__PURE__*/React.createElement(EditButton, {\n    onClick: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(DeleteButton, {\n    onClick: deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 8\n    }\n  }, \"Delete\")));\n}\n\nexport default EditTodo;","map":{"version":3,"sources":["/app/app/javascript/components/EditTodo.js"],"names":["React","useState","useEffect","axios","styled","toast","InputName","input","CurrentStatus","div","IsCompletedButton","button","EditButton","DeleteButton","configure","EditTodo","props","initialTodoState","id","name","is_completed","currentTodo","setCurrentTodo","notify","success","position","hideProgressBar","getTodo","get","then","resp","data","e","console","log","prop","match","params","handleInputChange","event","target","value","updateIsCompleted","val","patch","updateTodo","history","push","deleteTodo","sure","window","confirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst InputName = styled.input`\n  font-size: 20px;\n  width: 100%;\n  height: 40px;\n  padding: 2px 7px;\n  margin: 12px 0;\n`\n\nconst CurrentStatus = styled.div`\n  font-size: 19px;\n  margin: 8px 0 12px 0;\n  font-weight: bold;\n`\n\nconst IsCompletedButton = styled.button`\n  color: #fff;\n  font-size: 17px;\n  font-weight: 500;\n  padding: 5px 10px;\n  background: #2a115;\n  border: none;\n  border-radius: 3px;\n  cursor: pointed;\n`\n\nconst EditButton = styled.button`\n  color: #fff;\n  font-size: 17px;\n  font-weight: 500;\n  padding: 5px 10px;\n  margin: 0 10px;\n  background: #0ac620;\n  border: none;\n  border-radius: 3px;\n  cursor: pointed;\n`\n\nconst DeleteButton = styled.button`\n  color: #fff;\n  font-size: 17px;\n  font-weight: 500;\n  padding: 5px 10px;\n  background: #f54242;\n  border: none;\n  border-radius: 3px;\n  cursor: pointed;\n`\n\ntoast.configure()\n\nfunction EditTodo(props) {\n  const initialTodoState = {\n    id: null,\n    name: \"\",\n    is_completed: false\n  }\n\n  const [currentTodo, setCurrentTodo] = useState(initialTodoState)\n\n  const notify = () => {\n    toast.success('Todo successfully updated', {\n      position: 'bottom-center',\n      hideProgressBar: true\n    })\n  }\n\n  const getTodo = id => {\n    axios.get(`/api/v1/todos/${id}`)\n    .then(resp => {\n      setCurrentTodo(resp.data)\n    })\n    .catch(e => {\n      console.log(e)\n    })\n  }\n\n  useEffect(() => {\n    getTodo(prop.match.params.id)\n    }, [props.match.params.id])\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setCurrentTodo({ ...currentTodo, [name]: value })\n  }\n\n  const updateIsCompleted = val => {\n    var data = {\n      id: val.id,\n      name : val.name,\n      is_completed: !val.is_completed\n    }\n    axios.patch(`/api/v1/todos/${val.id}`, data)\n    .then(resp => {\n      setCurrentTodo(resp.data)\n    })\n  }\n\n  const updateTodo = () => {\n    axios.patch(`/api/v1/todos/${currentTodo.id}`, currentTodo)\n    .then(resp => {\n      notify()\n      props.history.push('/todos')\n    })\n  \n  .catch(e => {\n    console.log(e)\n  })\n}\n\nconst deleteTodo = () => {\n  const sure = window.confirm('Are you sure?')\n  if (sure) {\n    axios.delete(`/api/v1/todos/${currentTodo.id}`)\n    .then(resp => {\n      props.history.push('/todos')\n    })\n    .catch(e => {\n      console.log(e)\n    })\n  }\n}\n  return (\n    <>\n      <h1>Editing Todo</h1>\n      <div>\n        <div>\n          <label htmlFor=\"name\">Current Name</label>\n          <InputName\n          type=\"text\"\n          name=\"name\"\n          value={currentTodo.name}\n          onChange={handleInputChange}\n          />\n       \n        <div>\n        <span>Current Status</span><br/>\n        <CurrentStatus>\n          {currentTodo.is_completed ? \"Completed\" : \"Uncompleted\"}\n        </CurrentStatus>\n        </div>\n      </div>\n      {currentTodo.is_completed ? (\n        <IsCompletedButton onClick={() => updateIsCompleted(currentTodo)}>\n          Uncompleted\n        </IsCompletedButton>\n      ) : (\n        <IsCompletedButton onClick={() => updateIsCompleted(currentTodo)}>\n          Completed\n        </IsCompletedButton>\n      )}\n        <EditButton onClick={updateTodo}>\n        Update\n       </EditButton>\n       <DeleteButton onClick={deleteTodo}>\n        Delete\n       </DeleteButton>\n     </div>\n    </>\n  )\n}\n\nexport default EditTodo\n"]},"metadata":{},"sourceType":"module"}